import React from 'react'

const GoogleNEw = () => {
    const API_KEY = 'AI...';
    const CLIENT_ID = '44...';
    const appId = "44...";

    const SCOPES = ["https://www.googleapis.com/auth/drive"];

    const DISCOVERY_DOCS = [
        "https://www.googleapis.com/discovery/v1/apis/drive/v3/rest",
    ];

    const authorizeButton = document.getElementById("authorize_button");
    const signoutButton = document.getElementById("signout_button");

    // Use the Google API Loader script to load the google.picker script.
    function handleClientLoad() {
        gapi.load("client:auth2:picker", initClient);
    }

    function initClient() {
        gapi.client.init({
            apiKey: API_KEY,
            clientId: CLIENT_ID,
            discoveryDocs: DISCOVERY_DOCS,
            scope: SCOPES[0]
        })
            .then(
                function () {
                    // Listen for sign-in state changes.
                    gapi.auth2.getAuthInstance().isSignedIn.listen(handleSignIn);

                    // Handle the initial sign-in state.
                    handleSignIn(gapi.auth2.getAuthInstance().isSignedIn.get());
                    authorizeButton.onclick = handleAuthClick;
                    signoutButton.onclick = handleSignoutClick;
                },
                function (error) {
                    appendPre(JSON.stringify(error, null, 2));
                }
            );
    }

    function handleSignIn(isSignedIn) {
        if (isSignedIn) {
            authorizeButton.style.display = "none";
            signoutButton.style.display = "block";
            createPicker();
        } else {
            authorizeButton.style.display = "block";
            signoutButton.style.display = "none";
        }
    }

    function handleAuthClick(event) {
        gapi.auth2.getAuthInstance().signIn();
    }

    function handleSignoutClick(event) {
        gapi.auth2.getAuthInstance().signOut();
    }

    function createPicker() {
        const token = gapi.client.getToken().access_token
        if (token) {

            let view = new google.picker.View(google.picker.ViewId.DOCS);
            view.setMimeTypes("image/png,image/jpeg,image/jpg");
            let picker = new google.picker.PickerBuilder()
                .enableFeature(google.picker.Feature.NAV_HIDDEN)
                .enableFeature(google.picker.Feature.MULTISELECT_ENABLED)
                .setAppId(appId)
                .setOAuthToken(token)
                .addView(view)
                .addView(new google.picker.DocsUploadView())
                .setDeveloperKey(API_KEY)
                .setCallback(getFile)
                .build();
            picker.setVisible(true);
        }
    }

    function getFile(pickerResp) {
        gapi.client.drive.files
            .get({
                fileId: pickerResp.docs[0].id,
                alt: 'media'
            })
            .then(resp => {
                console.log("fetch response", resp.status)
                let binary = resp.body
                // EDIT - addition from Gabrielle vvvv
                let l = binary.length
                let array = new Uint8Array(l);
                for (var i = 0; i < l; i++) {
                    array[i] = binary, charCodeAt(i);
                }
                let blob = new Blob([array], { type: 'application/octet-stream' });
                // EDIT - addition from Gabrielle ^^^^
            }

}

export default GoogleNEw;